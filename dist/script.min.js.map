{"version":3,"sources":["script.js"],"names":["submitBtn","document","getElementById","cancelBtn","digitRegEx","personContacts","addressRemarks","addressORremarks","this","id","Math","floor","random","name","userName","phone","addEventListener","console","log","Contacts","inputFieldValidation","value","clearInputFields","displayInputs","contact","push","alert","alphabetLettersRegEx","test","classList","resetBtn","contactsContainer","innerHTML","concat","e","target","contains","parentElement","remove"],"mappings":"aAAA,IAAMA,UAAYC,SAASC,eAAe,cACpCC,UAAYF,SAASC,eAAe,cADpCF,SAAYC,SAASC,eAAe,aACpCC,kBAAqBD,SAAAA,cAAe,kBAKtCE,WAAa,SAAbA,qBAAJ,gBAKMC,eAAiB,GASnB,SAAKC,SAAAA,EAAiBC,EAAAA,GACzBC,KAAAC,GAAAC,KAAAC,MAAA,IAAAD,KAAAE,UAHGJ,KAAKK,KAAOC,EAMhBd,KAASe,MAACC,EAENR,KAAAF,eAAAC,EAVJU,QAAAC,IAASC,gBAcJZ,UAAAA,iBAAmBN,QAASC,WAoB7Be,GAZAH,SAAKM,SAAAA,eAAwB,QAAAC,MAAEN,MAAAd,SAAAC,eAAA,eAAAmB,MAC3Bd,iBAAcN,SAAAC,eAAA,oBAAAmB,OAWXD,uBAKP,OAAA,EAOAE,mBAIEC,QAAAA,IAAcC,UA1CpBP,QAAAC,IAAAH,OA0BIE,QAAQC,IAAIX,kBAyBR,IAAOiB,EAAQ,IAAAL,SAAAL,SAAAC,MAAAR,kBAZjBF,eAAeoB,KAAKD,GAwBjBD,cAAeC,KAGf,IAAAJ,qBAAe,WAGf,MAAe,KAAfN,UAGLY,MAAA,yCArBW,GACEC,qBAAqBC,KAAKd,UA8BxC,KAAAC,OApCHW,MAAA,sDAiBgB,GAsBZJ,WAAiBM,KAAjBN,OAGuBpB,KAATD,MAAAA,QACRM,MAAAA,8BAEN,GAlBwB,KAArBA,mBACCmB,MAAM,+DAwBJV,IAbiBU,MAAA,6CAET,IAdXnB,MAAAA,gCACO,IAkEVe,iBAAYO,WAEX,IAAAf,EAAAb,SAAAC,eAAA,QAGLa,EAAAd,SAAAC,eAAA,eACAK,EAAAN,SAAAC,eAAA,oBACA4B,EAASd,MAAAA,IACLe,EAAAA,MAAAA,IADJxB,EAAAc,MAAA,KAjDAlB,UAAUa,iBAAiB,QAAS,WAChCM,qBAMJ,IAAMC,cAAc,SAACC,GAEjBO,kBAAkBC,UAAYD,kBAAkBC,UAAlB,sTAAAC,OAIyBT,EAAQf,GAJjC,qNAAAwB,OAQyBT,EAAQX,KARjC,kOAAAoB,OAYyBT,EAAQlB,eAZjC,+NAAA2B,OAgByBT,EAAQT,MAhBjC,mRA+BlCgB,kBAAkBf,iBAAiB,QAAS,SAACkB,GAEtCA,EAAEC,OAAON,UAAUO,SAAS,eAC3BF,EAAEC,OAAOE,cAAcC,WAM/BR,SAASd,iBAAiB,QAAS,SAACkB,GAChCH,kBAAkBC,UAAU","file":"script.min.js","sourcesContent":["const submitBtn = document.getElementById('submit-btn');\r\nconst cancelBtn = document.getElementById('cancel-btn');\r\nconst resetBtn = document.getElementById('reset-btn');\r\nconst contactsContainer = document.querySelector('.contacts-list');\r\n\r\n// let phoneNoRegEx = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\nlet digitRegEx = /^[0-9]/;\r\nlet alphabetLettersRegEx = /^[a-zA-Z\\s]+$/;\r\n\r\n\r\n\r\nconst personContacts = [];\r\nconsole.log(personContacts);\r\n\r\n\r\n// object constructor function\r\nfunction Contacts( userName, phone, addressORremarks){\r\n    this.id = Math.floor(Math.random()*10000);\r\n    this.name = userName;\r\n    this.phone = phone;\r\n    this.addressRemarks = addressORremarks;\r\n}\r\n\r\n\r\nsubmitBtn.addEventListener('click', ()=>{\r\n    \r\n    // Step 1 : get the inputs\r\n    // get users inputs\r\n     userName = document.getElementById('name').value;\r\n     phone = document.getElementById('contact-num').value;\r\n     addressORremarks = document.getElementById('addressORremarks').value;\r\n\r\n\r\n\r\n    // Step 2 : validation on the inputs\r\n    // inputFieldValidation(); //ðŸ”–ðŸ“—problem any alert runs means validation fails still its next line are running.\r\n\r\n    // Stop execution if validation fails\r\n    if (!inputFieldValidation()) { //?ðŸ“—ðŸ”– if(!true) means false and it means condtion is false means now outside aor next code(function , line) will run. so only when true we got from this function.\r\n        return false; // return ; // next line dont run or Stop further code execution \r\n    }\r\n\r\n    \r\n    \r\n    // These will only run if validation passes\r\n    clearInputFields();\r\n\r\n    // These will only run if validation passes\r\n    console.log(userName);\r\n    console.log(phone);\r\n    console.log(addressORremarks);\r\n\r\n\r\n    // Step 3 : create the objects from inputs\r\n    \r\n    // create objects from user inputs or // These will only run if validation passes\r\n      const contact =  new Contacts(userName, phone, addressORremarks)\r\n    //   console.log(\"contact\",contact);\r\n    //   console.log(\"contact.id\",contact.id); // 9124\r\n    //   console.log(\"contact.phone\",contact.phone);\r\n    //   console.log(\"contact.addressORremarks\",contact.addressRemarks);\r\n    \r\n    // Step 4 : create the array of object\r\n      personContacts.push(contact)\r\n\r\n\r\n      displayInputs(contact); //Add or render contact to the UI\r\n})\r\n\r\n\r\nlet inputFieldValidation=()=>{\r\n\r\n     //  name validation or alphabets validation\r\n     if(userName === \"\"){\r\n        alert(\"Name is Empty, please enter the name\") // if it runs means validation fail.\r\n        return false;  // or  //return;   //---> ðŸ”–When you use just return without its value, the function returns undefined by default.In JavaScript, undefined is a falsy value. // Stop further execution\r\n      }else if (!alphabetLettersRegEx.test(userName)) { //ðŸ“—ðŸ”–  only and only allow alphabet characters and spaces for names validation. other than pattern thing then give false. means not fpound por not match\r\n           alert(\"Enter name only in alphabet\")\r\n            return false;  // or  //return;    //---> ðŸ”–When you use just return without its value, the function returns undefined by default.In JavaScript, undefined is a falsy value. // Stop further execution\r\n      }\r\n     \r\n    \r\n       \r\n\r\n    // phone no. validation  or digits validation\r\n      if(phone === \"\"){\r\n        alert(\"Phone no. is Empty, please enter the phone number\");\r\n         return false;  // or  //return;    //---> ðŸ”–When you use just return without its value, the function returns undefined by default.In JavaScript, undefined is a falsy value. // Stop further execution\r\n      }else if(!digitRegEx.test(phone)) { // Checks if the input contains anything other than digits then it gives true\r\n        alert(\"Enter phone number only in numeric digit\"); \r\n         return false;  // or  //return;    //---> ðŸ”–When you use just return without its value, the function returns undefined by default.In JavaScript, undefined is a falsy value. // Stop further execution\r\n      }else if(phone.length !== 10){\r\n        alert(\"number must be 10 digits.\"); \r\n         return false;  // or  //return;    //---> ðŸ”–When you use just return without its value, the function returns undefined by default.In JavaScript, undefined is a falsy value. // Stop further execution\r\n      }\r\n\r\n    //  address validation\r\n    if(addressORremarks === \"\"){\r\n        alert(\"addressORremarks is Empty, please enter the valid details.\");\r\n         return false;  // or  //return;    //---> ðŸ”–When you use just return without its value, the function returns undefined by default.In JavaScript, undefined is a falsy value. // Stop further execution\r\n    }\r\n\r\n   return true; // If all validations pass,    means all above are must have been false. bcz if any one true then inside alert() runs means validtion fails.\r\n\r\n   // âœ… Use return false; for validation failure â†’ Makes intent clear.\r\n   // âœ… Use return true; if all validations pass â†’ Ensures boolean return type.\r\n   // ðŸš« Avoid just //return;, since it implicitly returns undefined, which may cause confusion.\r\n}\r\n\r\nlet clearInputFields=()=>{ //  used 2 time. fuction reusablity utilized. 1.clear after add button click  2. clear button press\r\n   \r\n    const userName = document.getElementById('name');\r\n    const phone = document.getElementById('contact-num');\r\n    const addressORremarks = document.getElementById('addressORremarks');\r\n    \r\n    userName.value = \" \";\r\n    phone.value = \" \";\r\n    addressORremarks.value = \" \";\r\n\r\n}\r\n\r\n// Clearing all input fields\r\ncancelBtn.addEventListener('click', function(){\r\n    clearInputFields();\r\n});\r\n\r\n// display array of object    or    display user input with rape in card form.\r\n\r\n\r\nconst displayInputs=(contact)=>{\r\n\r\n    contactsContainer.innerHTML = contactsContainer.innerHTML + `\r\n    <div class=\"contact-card shadow-lg bg-white w-[calc(50%-20px)] max-md:w-[100%] p-2 rounded-md text-center h-[calc(50%-20px)]\">\r\n                        <div class=\"mb-2 \">\r\n                            <span class=\"font-bold\">Person ID:</span>\r\n                            <span class=\"text-gray-500 \">${contact.id}</span>\r\n                        </div>\r\n                        <div class=\"mb-2 \">\r\n                            <span class=\"font-bold\">Name:</span>\r\n                            <span class=\"text-gray-500 \">${contact.name}</span>\r\n                        </div>\r\n                        <div class=\"mb-2 \">\r\n                            <span class=\"font-bold\">Remarks / Address:</span>\r\n                            <span class=\"text-gray-500 \">${contact.addressRemarks}</span>\r\n                        </div>\r\n                        <div class=\"mb-2 \">\r\n                            <span class=\"font-bold\">Contact Number:</span>\r\n                            <span class=\"text-gray-500 \">${contact.phone}</span>\r\n                        </div>\r\n                        <button class=\"btn-Style  delete-btn\" id=\"delete-btn\">\r\n                            <i class=\"fa-solid fa-trash\"></i> Delete\r\n                        </button>\r\n                    </div>\r\n    \r\n    \r\n    `;\r\n\r\n\r\n}\r\n\r\n\r\n// delete card\r\ncontactsContainer.addEventListener(\"click\", (e)=>{\r\n\r\n    if(e.target.classList.contains(\"delete-btn\")){\r\n        e.target.parentElement.remove();\r\n    }\r\n})\r\n\r\n// reset \r\n// contacts list\r\nresetBtn.addEventListener(\"click\", (e)=>{\r\n    contactsContainer.innerHTML=\"\"; \r\n})"]}